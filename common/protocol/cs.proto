package cspb;
option java_package = "com.GameServer.proto.cspb"; 
option java_outer_classname = "Cs"; 
enum ErrorCode {
	Ok                          = 0;
	SysError                    = -1;
	PlayerSAccountIsExist       = -101;
	PlayerInsertFail            = -102;
	PlayerNotExist              = -103;
	KeyRandomTypeInvalid        = -104;
	PetIdIsInvalid              = -105;
	ChipIdIsInvalid             = -106;
	ChipNumIsNotEnough          = -107;
	RandomItemFail              = -108;
	SignInHasDone               = -109;
	PetLevelIsMax               = -110;
	PetStarLevelIsMax           = -111;
	PetIdIsExist                = -112;
	EquipSyntheNull				= -130;//装备合成上限
	ItemSyntheNull				= -131;//道具合成上限
	ItemNumLack					= -132;//道具不足
	stageBattleMax				= -133;//战斗上限
	playerSilverLack			= -134;//玩家银币不足
	skillIsMax					= -135;//技能达到上限
	playerNotFriend				= -136;//玩家未找到
	
	
};

enum AttrId{
	Diamond     = 1;
	Gold        = 2;
	Flower      = 3;
	Item        = 4;
	CopperKey   = 5;
	SilverKey   = 6;
	GoldKey     = 7;
	Max         = 8;
};

message AttrItem {
	required int32 item_id  = 1;
	required int32 item_num = 2;
};

message AttrValue {
	optional int32 diamond       = 1;
	optional int32 gold          = 2;
	optional int32 flower        = 3;
	repeated AttrItem item_list  = 4;
	optional int32 copper_key    = 5;
	optional int32 silver_key    = 6;
	optional int32 gold_key      = 7;
};

enum ChangeType {
	Add      = 1;//增加
	Deduct   = 2;//扣除
	Total    = 3;//总量
	Update   = 4;//更新
	MaxType  = 5;//ChangeType宏的最大值
};

message AttrInfo {
	required int32     id      = 1;
	required AttrValue value   = 2;
	required int32 change_type = 3;
}
message CSAttrNtf {
	repeated AttrInfo attr_list = 1;
};

message CSRegistPlayerReq {
	optional int64 regist_time = 1;
};

message CSRegistPlayerRes {
	required int32 ret = 1;
};

message PetInfo {
	required int32 pet_id         = 1;
	required int32 pet_level      = 2;
	required int32 pet_cur_exp    = 3;
	required int32 pet_total_exp  = 4;
	required int32 pet_star_level = 5;
};

message CSPetNtf {
	repeated PetInfo pet_list = 1;
};

message CSPetListReq {
	optional int32 data = 1;
};

message CSPetListRes {
	required int32 ret = 1;
};

message ChipInfo {
	required int32 chip_id     = 1;
	required int32 chip_type   = 2;
	required int32 chip_num    = 3;
	required int32 change_type = 4;
};

message CSChipNtf {
	repeated ChipInfo chip_list = 1;
};

message CSChipListReq {
	optional int32 data = 1;
};

message CSChipListRes {
	required int32 ret = 1;
};

enum KeyRandomType {
	rCopperKey      = 1;
	rSilverKey      = 2;
	rGoldKey        = 3;
	rCopperKeyPool  = 4;
	rSilverKeyPool  = 5;
	rGoldKeyPool    = 6;
	rSilverKeyBatch = 7;
	rGoldKeyBatch   = 8;
};

message CSKeyRandomReq {
	required int32 random_type = 1;
	//bind KeyRandomType
	optional string version    = 2;
};

message CSKeyRandomRes {
	required int32 ret             = 1;
	repeated int32 goods_list      = 2;
	required int32 random_type     = 3;
	repeated int32 next_goods_list = 4;
};

message PetLevelUpChipInfo {
	required int32 chip_id  = 1;
	required int32 chip_num = 2;
};

message CSPetLevelUpReq {
	required int32 pet_id                 = 1;
	repeated PetLevelUpChipInfo chip_list = 2;
};

message CSPetLevelUpRes {
	required int32 pet_id = 1;
	required int32 ret    = 2;
};

message CSPetStarUpReq {
	required int32 pet_id = 1;
};

message CSPetStarUpRes {
	required int32 pet_id = 1;
	required int32 ret    = 2;
};

message CSRandomItemReq {
	optional int32 use_random_item_id = 1;
};

message CSRandomItemRes {
	required int32 ret        = 1;
	required int32 item_index = 2;
};

message CSSignInNtf {
	required int32 signin_day   = 1;
	required int32 cur_day      = 2;
	required int32 consume      = 3;
	required int64 free_time    = 4;
};

message CSSignInReq {
	required int32 flag = 1;//0:查询.1:签到
};

message CSSignInRes {
	required int32 ret  = 1;
	required int32 flag = 2;
	required int32 free = 3;//0:补签（消耗钻石）.1:签到（免费）
};

message CSPoolNextFreeNtf {
	required int32 hour  = 1;
	required int32 today = 2;//1:今天。0:明天
};

message CSReportPetReq {
	required int32 pet_id = 1;
};

message CSReportPetRes {
	required int32 ret = 1;
};

message CSServerTimeReq {
	required int32 data = 1;
};

message CSServerTimeRes {
	required int32 ret         = 1;
	required int64 server_time = 2;
};

enum RechargeGoodsType {
	RechargeDiamond   = 1;
	RechargeItem      = 2;
	RechargeGift      = 3;
};

message CSRechargeReportReq {
	required int32  rmb            = 1;
	required int32  goods_type     = 2;
	required int32  goods_sub_type = 3;
	required int32  goods_num      = 4;
	required int64  create_time    = 5;
	required string version        = 6;
	required string code           = 7;
	required string channel        = 8;
	required int64  order_id       = 9;
};

message CSRechargeReportRes {
	required int32 ret      = 1;
	required int64 order_id = 2;
};

enum StrategyType {
	Newst   = 0;
	Force   = 1;
	Advise  = 2;
};

message CSUpdateInfoReq {
	required string version   = 1;
	required string code      = 2;
	required string channel   = 3;
};

message CSUpdateInfoRes {
	required int32  ret      = 1;
	required int32  strategy = 2;
	optional string url      = 3;
};

/*message CSMailListNtf {
	required string mail_id = 1;

	MailId           bson.ObjectId `bson:"_id"`
	Account          string        `bson:"account"`
	Uid              int64         `bson:"uid"`
	ExpirTime        int64         `bson:"expir_time"`
	MailType         int32         `bson:"mail_type"`
	Title            string        `bson:"title"`
	Contents         string        `bson:"contents"`
	AccessoryType    int32         `bson:"accessory_type"`
	AccessorySubType int32         `bson:"accessory_sub_type"`
	AccessoryNum     int32         `bson:"accessory_num"`

};



message CSGetMailReq {
	required int32 data = 1;
};

message CSGetMailRes {
	required int32  ret = 1;
};*/

message CSGetPlayerInfoReq{
	required int64 	accountId 	=1;
	
}
message CSGetPlayerInfoRes{
	required int64 	accountId 	=1;
	optional int64 	gold		=2;
	optional int64 	diamond		=3;
	optional int32 	playerLevel	=4;
	optional int64 	playerExp	=5;
	optional int32 	vipLevel	=6;
	optional int64 	vipExp		=7;
	optional int32 	strength	=8;
	optional int32  iconType	=9;//1:代表英雄ID，2，代表特殊icon
	optional int32 	icon		=10;
	optional string playerName	=11;
	optional int64 	lastLoginTime 	=12;
	optional int32 	ret 		=13;
}
/**
 *
 *获得玩家道具列表
 *
 **/	
message CSGetPlayerItemListReq{
	required int64 accountId	=1;
}

message CSGetPlayerItemRes{
	required int64 itemId		=1;
	required int32 itemNum		=2;
	required int32 isNew		=3;
}


message CSGetPlayerItemListRes{
	repeated CSGetPlayerItemRes playerItemRes	=1;
	required int32 ret			    			=2;
	
}



/**
 *
 *道具使用
 *
 **/	
message CSPlayerItemUseReq{
	required int64 accountId	=1;
	required int64 itemId		=2;
	required int32 itemNum		=3;
}
        
message CSPlayerItemUseRes{
	required int64 itemId		=2;
	required int32 itemNum		=3;
	required int32 ret			=4;	
}

/**
 *
 *道具出售
 *
 **/	
 message CSPlayerItemSellReq{
 		required int64 accountId	=1;
 		required int64 itemId		=2;
 		required int32 itemNum		=3;
 		
 }
 
 message CSPlayerItemSellRes{
  		required int64 itemId		=1;
 	    required int32 itemNum		=2;
 	    required int32 ret			=3;	
 }
 /**
 *
 *道具增加（下行）
 *
 **/	
 message CSPlayerItemsRes{
   		required int64 itemId		=1;
 	    required int32 itemNum		=2;
 }
  /**
 *
 *道具增加（下行）
 *
 **/	
 message CSPlayerItemAddListRes{
 		repeated CSGetPlayerItemRes playerItems	=1;
 		required int32 ret						=2;	
 }
  /**
 *
 *道具删除（下行）
 *
 **/	
  message CSPlayerItemDelListRes{
 		repeated CSPlayerItemsRes playerItems	=1;
 		required int32 ret						=2;	
 }
   /**
 *
 *道具合成
 *
 **/
 message CSPlayerItemSynthetiseReq{
 	required int64 itemId	=1;
 }
 
 message CSPlayerItemSynthetiseRes{
 	required int32 ret			=1;	
 }
 
    /**
 *
 *装备合成
 *
 **/
 message CSPlayerItemEquipSynthetiseReq{
 	required int64 heroId	=1;
 	required int64 equipId	=2;
 }
 
 message CSPlayerItemEquipSynthetiseRes{
 	required int32 ret			=1;	
 }
 
/**
 *
 *新道具属性更改
 *
 **/
 message CSPlayerItemOldReq{
	required int64 accountId	=1;
	required int64 itemId		=2;
}

 message CSPlayerItemOldRes{
	required int64 itemId		=1;
	required int32 ret			=2;	
}

/**
 *
 *点金手
 *
 **/
  message CSPlayerHandOfMidasReq{
  	required int32 type			=1;//点金手类型。1，购买金币。2，购买体力	
  }
  
  message CSPlayerHandOfMidasRes{
  	required int32 type			=1;//点金手类型。1，购买金币。2，购买体力	
  	optional int32 free_max		=2;//免费使用次数上限
  	optional int32 free_num		=3;//免费使用次数
   	optional int32 pay_max		=4;//付费使用次数上限
  	optional int32 pay_num		=5;//付费使用次数	
  	required int32 ret			=6;	
  	
  }  

/**
 *
 *金币属性刷新
 *
 **/
 message CSPlayerGoldReq{
	required int64 accountId	=1;
 }
 
 message CSPlayerGoldRes{
 		required int64 gold		=1;
 		required int32 ret		=2;	
 }
 
 /**
 *玩家基本属性刷新
 *
 **/
 message CSPlayerAttrReq{
	required int32 attr	=1;
 }
 
 message CSPlayerAttrRes{
 		required int32 attr		=1;	
 		required int64 num		=2;
 		required int32 attrType =3;
 		required int32 ret		=4;	
 }
 
/**
 *玩家基本属性修改
 *
 **/
  message CSPlayerChangeAttrReq{
 		required int32 attr		=1;	
 		required int64 num		=2;
 		required int32 attrType =3;
 }
 
   message CSPlayerChangeAttrRes{
    	required int32 attr		=1;	
 		required int64 num		=2;
 		required int32 attrType =3;
 		required int32 ret		=4;	
 }
 
 enum PlayerAttr {
  	exp				=1;//经验
 	gold			=2;//金币
 	diamond			=3;//钻石
 	player_level	=4;//玩家等级
 	vip_level		=5;//VIP等级
 	vip_exp			=6;//VIP经验值
 	strength    	=7;//体力
 	icon			=8;//头像
 	stage_reset_num	=9;//副本当天重置次数
 }
 

/**
 *
 *玩家邮件系统
 *
 **/
message CSGetEmailListReq{
	required int64 accountId	=1;
}

message GSGetEmailRes{
	required int64 emailId		=1;
	optional string title		=2;
	optional string context		=3;
	optional string itemId		=4;
	optional int64 	sendTime	=5;
	optional int32 isRead		=6;
}

message CSGetEmailListRes{
	required int64 accountId	=1;
	repeated GSGetEmailRes	emails	=2;
	required int32 ret		=3;
}

/**
 *
 *读取玩家邮件
 *
 **/

message CSEmailReadReq{
	required int64 accountId	=1;
	required int64 emailId		=2;
}

message CSEmailReadRes{
	required int32 ret		=1;
}

/**
 *
 *查看玩家信息
 *
 **/
message CSFriendGetInfoReq{
		required int64 	accountId 		=1;
}

message CSFriendGetInfoRes{
	optional CSFriendRes	playerInfo	=1;
	required int32 ret 			    	=2;

}

message CSFriendRes{
	required int64 	accountId 		=1;
	optional int32 	playerLevel		=2;
	optional int32 	icon			=3;
	optional string playerName		=4;
	optional string sociatyName		=5;
	optional int64 coolTime			=6;
	optional int32 vipLevel			=7;
}

/**
 *
 *获得好友列表
 *
 **/
message CSFriendListReq{
	required int64 accountId		=1;
}



message CSFriendListRes{
	required int64 	accountId 		=1;
	repeated CSFriendRes friends	=2;
	required int32 ret 			    =3;
}

/**
 *
 *推荐好友
 *
 **/
message CSFriendLookListReq{
	required int64 accountId		=1;
}


message CSFriendLookListRes{
	required int64 	accountId 		=1;
	repeated CSFriendRes friends	=2;
	repeated int64 coolTime			=3;	
	required int32 ret 			    =4;
}

/**
 *
 *申请加好友列表
 *
 **/
message CSFriendMakeListReq{
}

message CSFriendMakeListRes{
	required int64 	accountId 		=1;
	repeated CSFriendRes friends	=2;
	required int32 ret 			    =3;
}


/**
 *
 *申请加好友
 *
 **/
message CSFriendMakeReq{
	required int64 accountId		=1;
	required int64 friendId			=2;
}

message CSFriendMakeRes{
	required int64 friendId			=1;
	required int32 ret 			    =2;
}
/**
 *加好友
 **/
 message CSFriendAddReq{
 	required int64 accountId		=1;
	required int64 friendId			=2;
	required int32 add				=3;
 }
 
message CSFriendAddRes{
	required int64 friendId			=1;
	required int32 add				=2;
	required int32 ret 			    =3;
}

/**
 *删除好友
 **/
 message CSFriendDelReq{
	required int64 friendId			=1;
 }
 
message CSFriendDelRes{
	required int64 friendId			=1;
	required int32 ret 			    =2;
}

/**
 *给好友送体力
 **/
 message CSFriendGiftStrengthReq{
  	required int64 accountId		=1;
	required int64 friendId			=2;
 }
 
 message CSFriendGiftStrengthRes{
 	required int64 friendId			=1;
 	optional int64 coolTime			=2;
	required int32 ret 			    =3;
}
/**
 *好友送体力列表
 **/
 message CSFriendGiftStrengthListReq{
  	required int64 accountId		=1;
 }
 
/**
 *好友送体力列表
 **/
  message CSFriendStrengthInfoRes{
    required int64 	strengthId 		=1;
  	required int64 	accountId 		=2;
	optional int32 	playerLevel		=3;
	optional int32 	icon			=4;
	optional string playerName		=5;
	optional string sociatyName		=6;
	optional int32 vipLevel			=7;
 }
 
 message CSFriendGiftStrengthListRes{
   	required int64 	accountId 		=1;
	repeated CSFriendStrengthInfoRes fsir =2;
	required int32 ret 		 	 =3;
 }
 
 /**
 *收取体力
 **/
 message CSFriendGetStrengthReq{
   	repeated int64 	strengthId 		=1;
 }
 
  message CSFriendGetStrengthRes{
    repeated int64 	strengthId 		=1;
	required int32 ret 			 	=2;
 }
  /**
 *获得章节列表
 **/
 message CSStageGetChapterInfoListReq{
 }
 
  message CSStageGetChapterInfoRes{
    required int64 	chapterId 		=1;
	optional int32 chapterStarNum 	=2;
	optional string chest 			=3;//1代表已开启，0代表未开启
	optional int32 chapterState 	=4;//1,已通关  2，播放章节过度动画  3，可打章节
 }
 
  message CSStageGetChapterInfoListRes{
 	repeated CSStageGetChapterInfoRes sgcr 	= 1;
 	required int32 ret 				  		= 2;
}

/**
 *获得关卡列表
 **/
 message CSStageGetInfoListReq{
  required int64 	chapterId 		=1;
 }
 
 /**
 *单个关卡信息
 **/
 message CSStageGetInfoRes{
   required int64 	chapterId 		=1;//章节ID
   required int64 	stageId 		=2;//关卡ID	
   optional int32 	star 			=3;//关卡星级
   optional int32   battleNum		=4;//战斗次数
   optional int32 	resetNum		=5;//关卡重置次数
   optional int32   stageState		=6;//1,已通关  2，播放章节过度动画  3，可打关卡
 }
 
  /**
 *下个关卡信息
 **/
 message CSStageNextInfoRes{
 	required CSStageGetInfoRes stageInfo  =1;//关卡信息
	required int32 ret 				=2; 
 }
 
  message CSStageGetInfoListRes{
  repeated CSStageGetInfoRes sgfr	=1;
  required int32 ret 				=2;
 }
 
 message CSStageBittleBeginReq{
   required int64 	chapterId 		=1;//章节ID
   required int64 	stageId 		=2;//关卡ID	
 } 
 
  /**
 *关卡重置
 **/
 message CSStageResetReq{
   required int64 	chapterId 		=1;//章节ID
   required int64 	stageId 		=2;//关卡ID
 }
 
  message CSStageResetRes{
   required int64 	chapterId 		=1;//章节ID
   required int64 	stageId 		=2;//关卡ID
   required int32   battleNum		=3;//当天累计战斗次数
   required int32   resetNum		=4;//当天累计重置次数
   required int32 	ret 			=5;
 }
 
   /**
 *获得关卡重置次数
 **/
 message CSStageGetResetNumReq{
   required int64 	chapterId 		=1;//章节ID
   required int64 	stageId 		=2;//关卡ID
 }
 
   message CSStageGetResetNumRes{
   required int64 	chapterId 		=1;//章节ID
   required int64 	stageId 		=2;//关卡ID
   required int32   resetNum		=4;//当天累计重置次数
   required int32 	ret 			=5;
 }
 
 
/**
 *关卡扫荡
 **/
 message CSStageMopupReq{
   	required int64 	chapterId 		=1;//章节ID
   	required int64 	stageId 		=2;//关卡ID
   	required int32   mopupNum		=3;//扫荡次数
 }
 	
 message CSStageMopupRes{
 	repeated CSGetPlayerItemRes itemAddList	=1;//奖励物品
 	required int32	gold			=2;//奖励金币
 	required int32	exp				=3;//奖励金币	
 }
 
 message CSStageMopupListRes{
 	repeated CSStageMopupRes mopup	=1;//扫荡奖励信息
 	required int32 	ret 			=2;
 }
 
 message CSStageOpenChestReq{
    required int64 	chapterId 		=1;//章节ID
    required int32 	chestId 		=2;//宝箱ID，0,第一个宝箱，1第二个宝箱，2第三个宝箱
 }

  message CSStageOpenChestRes{
	required int32 ret = 1;

 }
  /**
 *战斗开始
 **/
 message CSStageBattleStartReq{
  required int64 	chapterId 		=1;//章节ID
   required int64 	stageId 		=2;//关卡ID
 }

 
 /**
 *战斗结束请求（临时）
 **/
 message CSStageBattleEndReq{
   required int64 	chapterId 		=1;//章节ID
   required int64 	stageId 		=2;//关卡ID
   optional int32 	star 			=3;//关卡星级
 }
 
 message CSStageBattleEndRes{
   required int64 	chapterId 				=1;//章节ID
   required int64 	stageId 				=2;//关卡ID	
   optional int32 	star 					=3;//关卡星级
   optional int32   battleNum				=4;//战斗次数
   optional int32   stageState				=5;//1,已通关  2，播放章节过度动画  3，可打关卡
   repeated CSGetPlayerItemRes itemAddList	=6;//奖励物品
   required int32	gold					=7;//奖励金币
   required int32	exp						=8;//奖励经验	
   required int32   ret						=9; 
 }
 

/**
 *更改章节请求
 **/
 message CSStageChapterChangeReq{
    required int64 	chapterId 		=1;//章节ID
   	optional int32 	ChapterState 	=3;//章节状态
 }
 
  message CSStageChapterChangeRes{
     required int64 	chapterId 		=1;//章节ID
   	required int32 		ret				=2; 
 }


 
 /**
 *更改关卡请求
 **/
 message CSStageChangeReq{
    required int64 	chapterId 		=1;//章节ID
   	required int64 	stageId 		=2;//关卡ID
   	optional int32 	ChapterState 	=3;//关卡星级
 }
 
  message CSStageChangeRes{
   	required int32 ret				=1; 
 }

 
 /**
 *获得武将信息
 **/
 message CSHeroInfoReq{
 	   required int64 	heroId 		=1;//武将ID
 }
 
 message CSHeroInfoRes{
 	   required int64 	heroId 		=1;//武将ID
 	   optional int32 	heroStar 	=3;//武将星级
 	   optional string 	heroSkill 	=4;//武将技能
 	   optional int64	heroExp		=5;//武将经验
 	   optional int32	heroLevel	=6;//武将等级
  	   optional string 	heroItem 	=7;//武将道具
	   optional int32   patrolStatus=8;//是否巡逻中，0否，1是
 	   required int32 	ret			=9;
 }
  /**
 *获得英雄武将列表
 **/
  message CSHeroInfoListReq{
 }
  message CSHeroInfoListRes{
  repeated CSHeroInfoRes heroInfo	=1;//武将信息
  required int32 	ret				=2;
  }
 
    /**
 *获得英雄武将阵容
 **/
 message CSHeroCampInfoReq{
   required int32 	campId				=1;//阵容ID
 }
 
 message CSHeroCampInfoRes{
    required int32 	campId				=1;//阵容ID
 	required string champ				=2;//阵容
 	required int32	isDefault			=3;//是否为默认出场阵容 1是，0不是
 	required int32 	ret					=4;
 }
/**
 *获得好友默认阵型
 **/
 message CSHeroCampInfoGetFriendReq{
    required int64 	accountId			=1;//玩家ID
 }
  message CSHeroCampInfoGetFriendRes{
	repeated CSHeroInfoRes heroInfo		=1;// 武将信息列表
 	required int32 	ret					=2;
 }
 
     /**
 *设置默认阵容
 **/
  message CSHeroSetDefaultCampReq{
   required int32 	campId				=1;//阵容ID
 }
 
 message CSHeroSetDefaultCampRes{
   	required int32 	ret					=1;
 }
 
 
 
   /**
 *获得英雄武将阵容列表
 **/
 message CSHeroCampListReq{}
 
 message CSHeroCampListRes{
 	repeated CSHeroCampInfoRes heroCampInfo	=1;//武将阵容
 	required int32 	ret						=2;
 	
 }
 /**
 *英雄升星
 **/
 message CSHeroUpStarReq{
  	required int32 	heroId					=1;
 }
 
 message CSHeroUpStarRes{
   	required int32 	heroId					=1;
    required int32 	star					=2;
  	required int32 	ret						=3;
 }
 
  /**
 *生成武将
 **/
 message CSHeroCreateReq{
  	required int32 	heroId					=1;
 }
 
 
  /**
 *英雄技能升级
 **/
 message CSHeroUpSkillReq{
  	required int32 	heroId					=1;
  	required int32 	skillId					=2;
 }
  message CSHeroUpSkillRes{
  	required int32 	heroId					=1;
  	required int32 skillId					=2;
   	required int32 skillLevel				=3; 	
  	required int32 	ret						=4;
 }
 
 
 
/**
 *更改英雄武将阵容
 **/
 message CSHeroChangeCampReq{
    required int32 	campId				=1;//阵容ID
 	required string champ				=2;//阵容
 }
 
  message CSHeroChangeCampRes{
   	required int32 	ret						=1;
  }
 
 

message CSLoginReq {
	required int32 data = 1;
};

message CSLoginRes {
	required int32 ret = 1;
};

message CSStageReportReq {
	required int32 stage_id    = 1;
	required int32 stage_level = 2;
	required int32 stage_score = 3;
};

message CSStageReportRes {
	required int32 ret = 1;
};


enum Command {
	kAttrNtf            = 1001;
	kRegistPlayerReq    = 1002;
	kRegistPlayerRes    = 1003;
	kPetNtf             = 1004;
	kPetListReq         = 1005;
	kPetListRes         = 1006;
	kChipNtf            = 1007;
	kChipListReq        = 1008;
	kChipListRes        = 1009;
	kKeyRandomReq       = 1010;
	kKeyRandomRes       = 1011;
	kPetLevelUpReq      = 1012;
	kPetLevelUpRes      = 1013;
	kRandomItemReq      = 1014;
	kRandomItemRes      = 1015;
	kSignInNtf          = 1016;
	kSignInReq          = 1017;
	kSignInRes          = 1018;
	kPetStarUpReq       = 1019;
	kPetStarUpRes       = 1020;
	kPoolNextFreeNtf    = 1021;
	kReportPetReq       = 1022;
	kReportPetRes       = 1023;
	kServerTimeReq      = 1024;
	kServerTimeRes      = 1025;
	kRechargeReportReq  = 1026;
	kRechargeReportRes  = 1027;
	kUpdateInfoReq      = 1028;
	kUpdateInfoRes      = 1029;
	kLoginReq           = 1031;
	kLoginRes           = 1032;
	kStageReportReq     = 1033;
	kStageReportRes     = 1034;
	kMaxCount           = 1035;
	playerGetInfo       = 1036;//玩家基本信息
	itemGetListByPlayer = 1038;//玩家道具列表
	emailGetList 	    = 1040;//获取邮件列表
	emailRead		    = 1042;//设置读取邮件
	itemUse				= 1044;//道具使用请求
	itemOldSet			= 1046;//取消新得道具属性
	itemSell			= 1048;//道具出售协议
	playerAttr			= 1050;//刷新玩家属性
	friendGetList 		= 1052;//好友列表 
	friendLookList	    = 1054;//推荐好友
	friendMake			= 1056;//申请加好友
	friendAdd			= 1058;//处理好友申请
	friendGiftStrength  = 1060;//好友送体力
	friendMakeList		= 1062;//好友申请列表
	friendGiftStrengthList	= 1064;//好友送体力列表
	friendGetStrength		= 1066;//收取好友体力
	friendDel				= 1070;//删除好友
	stageGetChapterInfoList = 1072;//获得章节列表
	stageGetInfoList 		= 1074;//获得关卡列表
	stageOpenChest			= 1075;//获取宝箱宝物
	stageBattleEnd			= 1076;//战斗结束
	stageGetInfo			= 1087;//获得关卡信息
	heroInfo				= 1077;//获得武将信息
	heroInfoList			= 1078;//获得武将列表
	heroCampInfo			= 1079;//获得武将阵容
	heroCampList			= 1080;//获得武将阵容列表
	heroChangeCamp			= 1081;//更改武将阵容
	heroSetDefaultCamp		= 1082;//设置默认阵容
	itemAddList				= 1083;//批量追加道具（下行）
	itemDelList				= 1084;//批量删除道具（下行）
	itemSynthetise			= 1085;//道具合成	
	itemEquipSynthetise		= 1086;//装备合成
	stageMopup				= 1088;//扫荡
	stageReset				= 1089;//重置
	stageChapterChange		= 1090;//修改章节状态
	stageChange				= 1091;//修改关卡状态	
	playerChangeAttr		= 1092;//修改玩家基本属性
	heroUpStar				= 1093;//武将升星
	heroUpSkill				= 1094;//武将技能升级
	heroCreate				= 1095;//生成武将
	stageGetResetNum		= 1096;//获得关卡重置次数
	stageNextInfo			= 1097;//开启新关卡
	heroCampInfoGetFriend	= 1098;//获得玩家默认阵容
	playerHandOfMidas		= 1099;//点金手
	friendGetInfo			= 1100;//查看玩家信息
};

message CSHead {
	required int32  cmd = 1;
};

message CSBody {
	optional CSAttrNtf            attr_ntf              = 1;
	optional CSRegistPlayerReq    regist_player_req     = 2;
	optional CSRegistPlayerRes    regist_player_res     = 3;
	optional CSPetNtf             pet_ntf               = 4;
	optional CSPetListReq         pet_list_req          = 5;
	optional CSPetListRes         pet_list_res          = 6;
	optional CSChipNtf            chip_ntf              = 7;
	optional CSChipListReq        chip_list_req         = 8;
	optional CSChipListRes        chip_list_res         = 9;
	optional CSKeyRandomReq       key_random_req        = 10;
	optional CSKeyRandomRes       key_random_res        = 11;
	optional CSPetLevelUpReq      pet_level_up_req      = 12;
	optional CSPetLevelUpRes      pet_level_up_res      = 13;
	optional CSRandomItemReq      random_item_req       = 14;
	optional CSRandomItemRes      random_item_res       = 15;
	optional CSSignInNtf          sign_in_ntf           = 16;
	optional CSSignInReq          sign_in_req           = 17;
	optional CSSignInRes          sign_in_res           = 18;
	optional CSPetStarUpReq       pet_star_up_req       = 19;
	optional CSPetStarUpRes       pet_star_up_res       = 20;
	optional CSPoolNextFreeNtf    pool_next_free_ntf    = 21;
	optional CSReportPetReq       report_pet_req        = 22;
	optional CSReportPetRes       report_pet_res        = 23;
	optional CSServerTimeReq      server_time_req       = 24;
	optional CSServerTimeRes      server_time_res       = 25;
	optional CSRechargeReportReq  recharge_report_req   = 26;
	optional CSRechargeReportRes  recharge_report_res   = 27;
	optional CSUpdateInfoReq      update_info_req       = 28;
	optional CSUpdateInfoRes      update_info_res       = 29;
	optional CSLoginReq           login_req             = 30;
	optional CSLoginRes           login_res             = 31;
	optional CSStageReportReq     stage_report_req      = 32;
	optional CSStageReportRes     stage_report_res      = 33;
	optional CSGetPlayerInfoReq   player_info_req       = 34;
	optional CSGetPlayerInfoRes   player_info_res       = 35;
	optional CSGetPlayerItemListReq player_item_req	    = 36;
	optional CSGetPlayerItemListRes player_item_res	    = 37;
	optional CSGetEmailListReq 	email_List_req	    	= 38;
	optional CSGetEmailListRes 	email_List_res	    	= 39;
	optional CSEmailReadReq 	email_read_req	   		= 40;
	optional CSEmailReadRes 	email_read_res	    	= 41;
	optional CSPlayerItemUseReq item_use_req	   		= 42;//玩家道具使用
	optional CSPlayerItemUseRes item_use_res	    	= 43;
	optional CSPlayerItemSellReq item_sell_req	   		= 44;//玩家道具出售
	optional CSPlayerItemSellRes item_sell_res	    	= 45;	
	optional CSPlayerItemOldReq item_old_req	   		= 46;//玩家新道具属性更改
	optional CSPlayerItemOldRes item_old_res	    	= 47;	
	optional CSPlayerAttrReq player_attr_req			= 48;//刷新玩家信息
	optional CSPlayerAttrRes player_attr_res	   		= 49;
	optional CSFriendListReq friend_list_req			= 50;//好友列表 
	optional CSFriendListRes friend_list_res			= 51;
	optional CSFriendLookListReq friend_look_list_req   = 52;//推荐好友
	optional CSFriendLookListRes friend_look_list_res   = 53;
	optional CSFriendMakeReq friend_make_req			= 54;//申请加好友
	optional CSFriendMakeRes friend_make_res			= 55;
	optional CSFriendAddReq friend_add_req				= 56;//处理好友申请
	optional CSFriendAddRes friend_add_res				= 57;
	optional CSFriendGiftStrengthReq friend_gift_strength_req      		= 58;//好友送体力
	optional CSFriendGiftStrengthRes friend_gift_strength_res      		= 59;
	optional CSFriendMakeListReq friend_make_list_req        			= 60;//好友申请列表
	optional CSFriendMakeListRes friend_make_list_res        			= 61;
	optional CSFriendGiftStrengthListReq friend_gift_strength_list_req	= 62;//好友送体力列表
	optional CSFriendGiftStrengthListRes friend_gift_strength_list_res	= 63;
	optional CSFriendGetStrengthReq friend_get_strength_req				= 64;//收取好友体力
	optional CSFriendGetStrengthRes friend_get_strength_res				= 65;
	optional CSFriendDelReq friend_del_req				= 68;//删除好友
	optional CSFriendDelRes friend_del_res				= 69;
	optional CSStageGetChapterInfoListReq stage_get_chapter_info_list_req=70;//获得章节列表
	optional CSStageGetChapterInfoListRes stage_get_chapter_info_list_res=71;
	optional CSStageGetInfoListReq stage_get_info_list_req				= 72;//获得关卡列表
	optional CSStageGetInfoListRes stage_get_info_list_res				= 73;
	optional CSStageOpenChestReq stage_open_chest_req					= 74;//获取宝箱宝物
	optional CSStageOpenChestRes stage_open_chest_res					= 75;
	optional CSStageBattleEndReq stage_battle_end_req					= 76;//战斗结束
	optional CSStageBattleEndRes stage_battle_end_res					= 77;//战斗结束
	optional CSHeroInfoReq		hero_info_req							= 78;//获得武将信息
	optional CSHeroInfoRes		hero_info_res							= 79;
	optional CSHeroInfoListReq	hero_info_list_req						= 80;//获得武将列表
	optional CSHeroInfoListRes	hero_info_list_res						= 81;//获得武将列表
	optional CSHeroCampInfoReq  hero_camp_info_req						= 82;//获得武将阵容
	optional CSHeroCampInfoRes  hero_camp_info_res						= 83;//获得武将阵容
	optional CSHeroCampListReq	hero_camp_list_req						= 84;//获得武将阵容列表
	optional CSHeroCampListRes	hero_camp_list_res						= 85;//获得武将阵容列表
	optional CSHeroChangeCampReq hero_change_camp_req					= 86;//更改武将阵容
	optional CSHeroChangeCampRes hero_change_camp_res					= 87;//更改武将阵容
	optional CSHeroSetDefaultCampReq hero_set_default_camp_req			= 88;//设置默认阵容
	optional CSHeroSetDefaultCampRes hero_set_default_camp_res			= 89;//设置默认阵容
	optional CSPlayerItemAddListRes player_item_add_list_res			= 90;//批量追加道具（下行）
	optional CSPlayerItemDelListRes player_item_del_list_res			= 91;//批量删除道具（下行）
	optional CSPlayerItemSynthetiseReq player_item_synthetise_req		= 92;// 道具合成
	optional CSPlayerItemSynthetiseRes player_item_synthetise_res		= 93;// 道具合成
	optional CSPlayerItemEquipSynthetiseReq player_item_equip_synthetise_req	= 94;//装备合成
	optional CSPlayerItemEquipSynthetiseRes player_item_equip_synthetise_res	= 95;//装备合成
	optional CSStageGetInfoRes	stage_get_info_res						= 96;//获得关卡信息
	optional CSStageMopupReq	stage_mopup_req							= 97;//扫荡
	optional CSStageMopupListRes stage_mopup_res						= 98;//扫荡奖励下发
	optional CSStageResetReq stage_reset_req							= 99;//重置
	optional CSStageResetRes stage_reset_res							= 100;//重置
	optional CSStageChapterChangeReq stage_chapter_change_req			= 101;//修改章节状态
	optional CSStageChapterChangeRes stage_chapter_change_res			= 102;//修改章节状态
	optional CSStageChangeReq stage_change_req							= 103;//修改关卡状态
	optional CSStageChangeRes stage_change_res							= 104;//修改关卡状态
	optional CSPlayerChangeAttrReq player_change_attr_req				= 105;//修改玩家基本属性
	optional CSPlayerChangeAttrRes player_change_attr_res				= 106;//修改玩家基本属性
	optional CSHeroUpStarReq hero_up_star_req							= 107;//武将升星
	optional CSHeroUpStarRes hero_up_star_res							= 108;//武将升星
	optional CSHeroUpSkillReq hero_up_skill_req							= 109;//武将技能升级
	optional CSHeroUpSkillRes hero_up_skill_res							= 110;//武将技能升级
	optional CSHeroCreateReq hero_create_req							= 111;//生成武将
	optional CSHeroInfoRes 	 hero_create_res							= 112;//生成武将
	optional CSStageGetResetNumReq stage_get_reset_num_req				= 113;//获得关卡重置次数
	optional CSStageGetResetNumRes stage_get_reset_num_res				= 114;//获得关卡重置次数
	optional CSStageNextInfoRes stage_next_info_res						= 115;//获得下一关卡信息
	optional CSHeroCampInfoGetFriendReq	hero_camp_info_get_friend_req	= 116;//获得玩家默认阵容
	optional CSHeroCampInfoGetFriendRes	hero_camp_info_get_friend_res	= 117;//获得玩家默认阵容
	optional CSPlayerHandOfMidasReq player_hand_of_midas_req			= 118;//点金手
	optional CSPlayerHandOfMidasRes player_hand_of_midas_res			= 119;//点金手
	optional CSFriendGetInfoReq friend_get_info_req						= 120;//获得玩家信息
	optional CSFriendGetInfoRes friend_get_info_res						= 121;//获得玩家信息
	
};

message CSPkg {
	required CSHead head    = 1;
	required CSBody body    = 2;
};

message CSPkgList {
	required string c_account = 1;
	required string s_account = 2;
	repeated CSPkg pkgs       = 3;
	required int64 seq        = 4;
	required int64 uid        = 5;
};