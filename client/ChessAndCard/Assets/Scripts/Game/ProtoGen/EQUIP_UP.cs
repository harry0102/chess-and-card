//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: equip_up.proto
namespace deploy
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"EQUIP_UP")]
  public partial class EQUIP_UP : global::ProtoBuf.IExtensible
  {
    public EQUIP_UP() {}
    
    private int _equip_up_level;
    [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name=@"equip_up_level", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public int equip_up_level
    {
      get { return _equip_up_level; }
      set { _equip_up_level = value; }
    }
    private int _spend;
    [global::ProtoBuf.ProtoMember(2, IsRequired = true, Name=@"spend", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    public int spend
    {
      get { return _spend; }
      set { _spend = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"EQUIP_UP_ARRAY")]
  public partial class EQUIP_UP_ARRAY : global::ProtoBuf.IExtensible
  {
    public EQUIP_UP_ARRAY() {}
    
    private readonly global::System.Collections.Generic.List<deploy.EQUIP_UP> _items = new global::System.Collections.Generic.List<deploy.EQUIP_UP>();
    [global::ProtoBuf.ProtoMember(1, Name=@"items", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<deploy.EQUIP_UP> items
    {
      get { return _items; }
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}